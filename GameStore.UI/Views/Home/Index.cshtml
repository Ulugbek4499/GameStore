@using GameStore.Domain.Entities.Identity;
@using Microsoft.AspNetCore.Identity
@using GameStore.Application.UseCases.Games;
@using GameStore.Application.UseCases.Genres;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Home Page";
    GameResponse[] Games = ViewData["Games"] as GameResponse[];
    GenreResponse[] Genres = ViewData["Genres"] as GenreResponse[];
}
    <div class="input-group-father">
        <div class="add-genre-btn">
            <button class="btn btn-transparent ps-5 text-white" id="addGenreButton" data-toggle="modal" data-target="#addGenreModal">
                + Add Genre
            </button>
        </div>
        <div class="input-group">
        <div class="search-father">
            <form onsubmit="return validateSearchInput()">
                <button id="searchButton" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
                <input id="searchInput" type="text" placeholder="Search" class="search-input">
            </form>
        </div>
            <div class="add-game-btn">
                <a href="@Url.Action("CreateGame", "Game")" class="btn btn-success">Add Game</a>
            </div>
        </div>
    </div>

<div class="modal fade" style="width:25%;" id="addGenreModal" tabindex="-1" role="dialog" aria-labelledby="addGenreModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="padding-left:100px; padding-top:90px;">
        <div class="modal-content" >
            <div class="modal-body">
                <ul class="list-unstyled">
                    @foreach (var genre in Genres)
                    {
                        if (genre.ParentGenreId == null)
                        {
                            <li>
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input genre-checkbox" value="@genre.Id" id="genre-@genre.Id">
                                    <label class="form-check-label" for="genre-@genre.Id">@genre.Name</label>
                                </div>

                                @if (genre.ChildGenres.Any())
                                {
                                    <ul class="list-unstyled ml-3">
                                        @foreach (var childGenre in genre.ChildGenres)
                                        {
                                            <li>
                                                <div class="form-check">
                                                    <input type="checkbox" class="form-check-input genre-checkbox" value="@childGenre.Id" id="genre-@childGenre.Id">
                                                    <label class="form-check-label" for="genre-@childGenre.Id">@childGenre.Name</label>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>


    <div class="row card-container">
        @foreach (var game in Games)
        {
            <div class="col-4 mb-4  filtered-game" data-genres="@string.Join(",", game.Genres.Select(genre => genre.Id))">
                <div class="text-white border-0 card-content">
                    @if (!string.IsNullOrWhiteSpace(game.Picture))
                    {
                        <div class="image-container">
                            <a href="@Url.Action("ViewGame", "Game", new { id = game.Id })" style="color:white">
                                <img class="card-img-top" src="@Url.Content(game.Picture)" alt="Game image cap" />
                                <div class="game-actions">
                                    <div class="row">
                                        <div class="col">
                                            <a asp-action="UpdateGame" asp-route-id="@game.Id" class="btn btn-primary btn-sm game-action edit-game">Edit Game</a>
                                        </div>
                                        <div class="col">
                                            <a asp-action="DeleteGame" asp-route-id="@game.Id" class="btn btn-danger btn-sm game-action delete-game">Delete Game</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="info-box-container">

                                    <div class="price-name-box">
                                        @if (game.Price == 0 || game.Price == null)
                                        {
                                            <p class="text-price">Free</p>
                                        }
                                        else
                                        {
                                            <p class="text-price">$@game.Price</p>
                                        }
                                        <div style="line-height: 1.2">
                                        <p class="text-genres mb-0 pb-0 ">@string.Join("/ ", game.Genres.Select(genre => genre.Name))</p>
                                        <a href="@Url.Action("ViewGame", "Game", new { id = game.Id })" style="color:white; padding-top:0px; margin-top:0px;" class="game-name">@game.Name</a>
                                        </div>
                                    </div>
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <div class="buy-btn-container">
                                        <a href="#" class="btn btn-success buy-game" data-game-id="@game.Id" data-user-id="@UserManager.GetUserId(User)">BUY</a>
                                    </div>
                                }

                            </div>
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle the "BUY" button click event
        $('.buy-game').on('click', function (e) {
            e.preventDefault(); // Prevent the default link behavior

            var gameId = $(this).data('game-id'); // Get the game ID from the data attribute
            var userId = $(this).data('user-id'); // Get the user ID from the data attribute

            // Send a POST request to the CreateCartItem action
            $.ajax({
                type: 'POST',
                url: '/CartItem/CreateCartItem',
                data: { GameId: gameId, UserId: userId, Count: 1 }, // Ensure that the key names match your action parameters
                success: function (data) {
                    // Handle the response if needed
                    console.log('CartItem created: ' + data);
                    // Optionally, you can redirect the user after the cart item is created
                    // window.location.href = '/your-success-page';
                },
                error: function (error) {
                    // Handle any errors
                    console.error('Error creating CartItem: ' + error);
                }
            });
            getCartItemCount();
        });
    });
</script>


<script>
    $(document).ready(function () {
        // When the "Search" button is clicked, perform the search.
        $("#searchButton").click(function (e) {
            e.preventDefault(); // Prevent the default form submission.
            searchGames();
        });

        // Function to perform the search
        function searchGames() {
            var searchTerm = $("#searchInput").val().toLowerCase();

            // Check if the search term is at least 3 characters long
            if (searchTerm.length < 3) {
                alert("Search input must be at least 3 characters long.");
                return;
            }

            $('.filtered-game').each(function () {
                var gameName = $(this).find('.game-name').text().toLowerCase();

                if (gameName.includes(searchTerm)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        // Function to validate the search input
        function validateSearchInput() {
            var searchTerm = $("#searchInput").val().trim(); // Remove leading and trailing white spaces

            if (searchTerm.length < 3) {
                alert("Search input must be at least 3 characters long.");
                return false; // Prevent the form submission
            }

            // If the input is valid, the form will be submitted
            return true;
        }
    });
</script>



<script>
    $(document).ready(function () {
        $("#addGenreButton").click(function () {
            // Clear all checkboxes when the modal opens
            $(".genre-checkbox").prop('checked', false);
        });

        // Handle genre filter
        $(".genre-checkbox").change(function () {
            var selectedGenres = [];

            $(".genre-checkbox:checked").each(function () {
                selectedGenres.push($(this).val());
            });

            if (selectedGenres.length === 0) {
                // If no genres are selected, show all games
                $(".filtered-game").show();
            } else {
                // Hide all games
                $(".filtered-game").hide();

                // Show games that match the selected genres
                selectedGenres.forEach(function (genreId) {
                    $(".filtered-game[data-genres*='" + genreId + "']").show();
                });
            }
        });
    });
</script>

