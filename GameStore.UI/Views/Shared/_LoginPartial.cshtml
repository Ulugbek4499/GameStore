@using GameStore.Domain.Entities.Identity;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
  <div style="display:flex; justify-content:space-around;">
    <li class="nav-item mr-3">
         <img src="/Uploads/@UserManager.GetUserAsync(User).Result.Photo" style="width: 40px; height: 50px; border-radius: 50%;" />
    </li>
    <li class="nav-item mr-3">
            <a class="nav-link text-white-50" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserAsync(User).Result.FirstName @UserManager.GetUserAsync(User).Result.LastName</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white-50">Sign Out</button>
        </form>
    </li>
  </div>
}
else
{
  <div style="display:flex; justify-content:space-around;">
         <li class="nav-item mr-3">
                <a class="nav-link text-white-50" asp-area="Identity" asp-page="/Account/Login">SignIn</a>
         </li>
         <li class="nav-item">
            <a class="nav-link text-white-50" asp-area="Identity" asp-page="/Account/Register">SignUp</a>
         </li>
  </div>
}
</ul>
