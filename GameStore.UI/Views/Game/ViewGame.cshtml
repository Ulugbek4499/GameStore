@using GameStore.Application.UseCases.Games

@{
    Layout = "_Layout";
}

@model GameResponse

<div class="move-margin" >
    <div class="card text-white border-0" style="background-color: #1e1e1e;width: 100%;">
        <div class="image-container-view">
            <img src="~/@Model.Picture" alt="@Model.Name" class="img-fluid" />
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <p class="text-price lead card-text">@Model.Name</p>
                    <p class="display-6">$@Model.Price</p>
                </div>
                <div class="col">
                </div>
                <div class="col">
                    <a href="#" class="btn btn-success ms-5">BUY</a>
                </div>
            </div>
            <hr />
            <p>
                @foreach (var genre in Model.Genres)
                {
                    <button class="hidden-corners-button">@genre.Name</button>
                }
            </p>
            <br />
            <div class="row">
                <h6 class="thin-version">@Model.Description</h6>
            </div>
            <br />
            <div class="row">
                <div class="col">
                    <a asp-action="UpdateGame" asp-route-id="@Model.Id" class="btn btn-primary">Edit Game</a>
                </div>
                <div class="col">
                    <a asp-action="DeleteGame" asp-route-id="@Model.Id" class="btn btn-danger">Delete Game</a>
                </div>
            </div>
        </div>

        <div class="comment-section">
            <h3>Comments</h3>

            <!-- Add a form to create a new comment -->
            <form id="comment-form">
                <input type="hidden" id="game-id" value="@Model.Id" />
                <div class="form-group">
                    <textarea class="form-control" id="comment-text" placeholder="Add a comment"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Add Comment</button>
            </form>

            @foreach (var comment in Model.Comments.Where(c => c.ParentCommentId == null))
            {
                <div class="comment">
                    <div class="comment-header">
                        <strong>@comment.User.FirstName @comment.User.LastName</strong>
                    </div>
                    <div class="comment-text">
                        @comment.Text
                    </div>
                    <div class="comment-actions">
                        <!-- Add a reply button for each comment -->
                        <a href="#" class="reply-button" data-parent-comment-id="@comment.Id">Reply</a>
                    </div>

                    <!-- Recursively display child comments -->
                    @foreach (var childComment in Model.Comments.Where(c => c.ParentCommentId == comment.Id))
                    {
                        <div class="child-comment">
                            <div class="comment-header">
                                <strong>@childComment.User.FirstName @childComment.User.LastName</strong>
                            </div>
                            <div class="comment-text">
                                @childComment.Text
                            </div>
                            <div class="comment-actions">
                                <!-- Add a reply button for each child comment -->
                                <a href="#" class="reply-button" data-parent-comment-id="@childComment.Id">Reply</a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>


    </div>
</div>

<div class="clr"></div>


@section scripts {
    <script>
        // JavaScript code for handling comment creation and replies
        $(document).ready(function () {
            // Handle the submit of the comment form
            $('#comment-form').submit(function (e) {
                e.preventDefault();
                var gameId = $('#game-id').val();
                var text = $('#comment-text').val();

                // Send a POST request to create a new comment
                $.ajax({
                    url: '/Comments/CreateComment',
                    type: 'POST',
                    data: { gameId: gameId, text: text },
                    success: function (commentId) {
                        // Add the new comment to the comment section
                        var newComment = '<div class="comment"><div class="comment-header"><strong>You</strong><span class="comment-date">Now</span></div><div class="comment-text">' + text + '</div><div class="comment-actions"><a href="#" class="reply-button" data-parent-comment-id="' + commentId + '">Reply</a></div></div>';
                        $('.comment-section').prepend(newComment);
                        $('#comment-text').val('');
                    },
                    error: function () {
                        alert('Error creating comment.');
                    }
                });
            });

            // Handle clicking the reply button
            $('.reply-button').click(function () {
                var parentCommentId = $(this).data('parent-comment-id');
                var replyText = prompt('Enter your reply:');
                if (replyText) {
                    var gameId = $('#game-id').val();

                    // Send a POST request to create a reply comment
                    $.ajax({
                        url: '/Comments/CreateComment',
                        type: 'POST',
                        data: { gameId: gameId, text: replyText, parentCommentId: parentCommentId },
                        success: function (commentId) {
                            // Add the reply comment under the parent comment
                            var replyComment = '<div class="comment reply"><div class="comment-header"><strong>You</strong><span class="comment-date">Now</span></div><div class="comment-text">' + replyText + '</div></div>';
                            $('.comment[data-parent-comment-id="' + parentCommentId + '"]').append(replyComment);
                        },
                        error: function () {
                            alert('Error creating reply.');
                        }
                    });
                }
            });
        });
    </script>
}