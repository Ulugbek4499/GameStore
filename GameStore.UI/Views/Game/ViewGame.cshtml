<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@using GameStore.Domain.Entities.Identity;
@using Microsoft.AspNetCore.Identity
@using GameStore.Application.UseCases.Games;
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = "_Layout";
}

@model GameResponse

<div class="move-margin">
    <!-- Game Details -->
    <div class="card text-white border-0" style="background-color: #1e1e1e; width: 100%;">
        <!-- Game Image -->
        <div class="image-container-views">
            <img src="~/@Model.Picture" alt="@Model.Name" class="img-fluids" />
        </div>
        <div class="card-body" style="padding-top:10px;">
            <!-- Game Title and Price -->
            <div class="row">
                <div class="col">
                    <p class="text-price lead card-text" style="font-weight:bold;">@Model.Name</p>
                    <p class="display-6">$@string.Format("{0:0.00}", Model.Price)</p>
                </div>
                <div class="buy-btn-container">
                    <a href="#" class="btn btn-success buy-game" data-game-id="@Model.Id" data-user-id="@UserManager.GetUserId(User)">BUY</a>
                </div>
            </div>
            <hr />
            <!-- Game Genres -->
            <p>
                @foreach (var genre in Model.Genres)
                {
                    <button class="hidden-corners-button">@genre.Name</button>
                }
            </p>
            <br />
            <!-- Game Description -->
            <div class="row">
                <h6 class="thin-version">@Model.Description</h6>
            </div>
            <br />
            <!-- Edit and Delete Buttons -->
            <div class="row">
                <div class="col">
                    <a asp-action="UpdateGame" asp-route-id="@Model.Id" class="btn btn-primary">Edit Game</a>
                </div>
                <div class="col">
                    <a asp-action="DeleteGame" asp-route-id="@Model.Id" class="btn btn-danger">Delete Game</a>
                </div>
            </div>
        </div>

        <div class="row mt-5 text-white bg-dark">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="game-comment-container">
               
                        <button class="btn btn-outline-primary add-comment-btn">Comment</button>
                        <form class="comment-form" asp-controller="Games" asp-action="AddComment" method="post">
                            <input asp-for="Id" readonly hidden />
                            <div class="form-group">
                                <textarea asp-for="Comments" class="form-control" rows="3" required maxlength="600"></textarea>
                                <button type="submit" class="btn btn-outline-primary post-btn">Save</button>
                                <button type="button" class="btn btn-outline-secondary cancel-btn">Cancel</button>
                            </div>
                        </form>
                </div>

                <ul class="comment-list  comment-top" list="@Model.Comments" count="0">
                    @foreach (var comment in Model.Comments.Where(comment => comment.ParentComment is null))
                    {
                        <div class="comment" style="margin-top: 30px;">
                            <div class="d-flex flex-start mt-4">
                                <a class="me-3" href="#!">
                                    @if (@comment.User.Photo is not null)
                                    {
                                        <img class="rounded-circle shadow-1-strong"
                                             src="~/Images/@comment.User.Photo" alt="avatar"
                                             width="40" height="40" />
                                    }
                                    else
                                    {
                                        <img class="rounded-circle shadow-1-strong"
                                             src="~/static-images/default.jpg" alt="avatar"
                                             width="40" height="40" />
                                    }
                                </a>
                                <div class="flex-grow-1 flex-shrink-1">
                                    <div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <p class="mb-1">
                                                @comment.User.FirstName @comment.User.LastName
                                                <span class="small">- @GetTimeElapsed(comment.Created)</span>
                                            </p>
                                        </div>
                                        <p class="small mb-0">@comment.Text</p>
                                      @*  @if (HttpContextHelper.UserId is null)
                                        {
                                            <a class="reply-btn btn text-primary" asp-controller="Accounts" asp-action="Login"
                                               asp-route-ReturnUrl="~/Post/@Model.Game.Id">Login to reply</a>
                                        }*@
                                   
                                            <a aria-expanded="false" href="@($"#replyComment{comment.Id}")" data-toggle="collapse" class="reply-btn btn text-primary">Reply</a>
                                            <a aria-expanded="false" href="@($"#editComment{comment.Id}")" data-toggle="collapse" class="reply-btn btn text-primary">Edit</a>
                                            <a aria-expanded="false" href="@($"#deleteComment{comment.Id}")" data-toggle="collapse" class="reply-btn btn text-danger">Delete</a>
                                        
                                      @*  @if (HttpContextHelper.UserId is not null)
                                        {*@
                                            <div class="collapse" id="@($"replyComment{comment.Id}")">
                                                <form asp-controller="Games" asp-action="AddComment">
                                                    <input asp-for="Id" readonly hidden />
                                                    <input asp-for="@Model.Comments" value="@comment.Id" readonly hidden />
                                                    <div class="form-group">
                                                        <label for="comment">Write a reply</label>
                                                        <textarea asp-for="Comments" class="form-control" rows="3"></textarea>
                                                        <button type="submit" class="btn btn-outline-primary post-btn">Save</button>
                                                    </div>
                                                </form>
                                            </div>
                                            <div class="collapse" id="@($"editComment{comment.Id}")">
                                                <form asp-controller="Games" asp-action="EditComment" asp-route-commentId="@comment.Id"
                                                      asp-route-gameId="@Model.Id" method="post">
                                                    <div class="form-group">
                                                        <label asp-for="Comments" class="control-label text-white">Edit Comment</label>
                                                        <input asp-for="Comments" name="text" class="form-control" />
                                                        <span asp-validation-for="Comments" class="text-danger"></span>
                                                    </div>
                                                    <button type="submit" class="btn btn-outline-primary border-0">Edit</button>
                                                </form>
                                            </div>
                                            <div class="collapse" id="@($"deleteComment{comment.Id}")">
                                                <form asp-controller="Games" asp-action="DeleteComment" asp-route-commentId="@comment.Id"
                                                      asp-route-gameId="@Model.Id" method="post">
                                                    <button type="submit" class="btn btn-outline-danger border-0">Delete</button>
                                                </form>
                                            </div>
                                       @* }*@
                                    </div>
                                </div>
                            </div>

                            <ul class="comment-list" list="@comment.ChildComments" count="0" style="margin-left: 30px; margin-top:0;">
                                @foreach (var reply in comment.ChildComments)
                                {
                                    <div class="d-flex flex-start mt-4">
                                        <a class="me-3" href="#!">
                                            @if (@reply.User.Photo is not null)
                                            {
                                                <img class="rounded-circle shadow-1-strong"
                                                     src="~/Images/@reply.User.Photo" alt="avatar"
                                                     width="40" height="40" />
                                            }
                                            else
                                            {
                                                <img class="rounded-circle shadow-1-strong"
                                                     src="~/static-images/default.jpg" alt="avatar"
                                                     width="40" height="40" />
                                            }
                                        </a>
                                        <div class="flex-grow-1 flex-shrink-1">
                                            <div>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <p class="mb-1">
                                                        @reply.User.FirstName @reply.User.LastName
                                                        <span class="small">- @GetTimeElapsed(reply.Created)</span>
                                                    </p>
                                                </div>
                                                <p class="small mb-0">@reply.Text</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </ul>
                        </div>
                    }
                </ul>
            </div>
        </div>
    </div>


    @section Scripts{
        <script>
            $('[data-toggle="collapse"]').on('click', function () {
                var $this = $(this),
                    $parent = typeof $this.data('parent') !== 'undefined' ? $($this.data('parent')) : undefined;
                if ($parent === undefined) {
                    $this.find('.glyphicon').toggleClass('glyphicon-plus glyphicon-minus');
                    return true;
                }

                var currentIcon = $this.find('.glyphicon');
                currentIcon.toggleClass('glyphicon-plus glyphicon-minus');
                $parent.find('.glyphicon').not(currentIcon).removeClass('glyphicon-minus').addClass('glyphicon-plus');

            });

            $(document).ready(function () {
                $('.add-comment-btn').click(function () {
                    var $container = $(this).closest('.game-comment-container');
                    $container.find('.comment-form').show();
                    $container.find('.comment-text').hide();
                });

                $('.cancel-btn').click(function () {
                    var $container = $(this).closest('.game-comment-container');
                    $container.find('.comment-form').hide();
                    $container.find('.comment-form textarea').val('');
                    $container.find('.comment-text').hide();
                });

                $('.post-btn').click(function () {
                    var $container = $(this).closest('.game-comment-container');
                    var $form = $container.find('.comment-form');
                    $form.submit();
                });

                $('textarea[asp-for="Comment.Text"]').on('input', function () {
                    var maxLength = 600;
                    var currentLength = $(this).val().length;
                    var remaining = maxLength - currentLength;

                    var $counter = $(this).closest('.form-group').find('.character-counter span');
                    $counter.text(remaining);

                    if (remaining < 0) {
                        $counter.addClass('text-danger');
                    } else {
                        $counter.removeClass('text-danger');
                    }
                });
            });


        </script>
    }


    <!--Code for to display time left-->
    @functions
    {
        public string GetTimeElapsed(DateTime createdAt)
        {
            var currentTime = DateTime.UtcNow;
            var timeElapsed = currentTime - createdAt;

            if (timeElapsed.TotalMinutes < 1)
            {
                // Less than a minute
                return "Just now";
            }
            else if (timeElapsed.TotalHours < 1)
            {
                // Minutes
                var minutes = (int)timeElapsed.TotalMinutes;
                return $"{minutes} minute{(minutes != 1 ? "s" : "")} left";
            }
            else if (timeElapsed.TotalDays < 1)
            {
                // Hours
                var hours = (int)timeElapsed.TotalHours;
                return $"{hours} hour{(hours != 1 ? "s" : "")} left";
            }
            else if (timeElapsed.TotalDays < 30)
            {
                // Days
                var days = (int)timeElapsed.TotalDays;
                return $"{days} day{(days != 1 ? "s" : "")} left";
            }
            else if (timeElapsed.TotalDays < 365)
            {
                // Months
                var months = (int)(timeElapsed.TotalDays / 30);
                return $"{months} month{(months != 1 ? "s" : "")} left";
            }
            else
            {
                // Years
                var years = (int)(timeElapsed.TotalDays / 365);
                return $"{years} year{(years != 1 ? "s" : "")} left";
            }
        }
    }

    <div class="clr"></div>

      @*  <div class="mt-4">
            <div>
                <input type="text" id="commentInput" placeholder="Write a comment..." />
                <button id="saveCommentBtn" data-game-id="@Model.Id">Save</button>
            </div>

            <div id="comments">
                @foreach (var comment in Model.Comments)
                {
                    <div class="comment" data-comment-id="@comment.Id">
                        <p>@comment.Text</p>
                        <div>
                            <input type="text" class="replyInput" id="replyCommentInput" placeholder="Write a reply..." />
                            <button class="saveReplyBtn" data-parent-id="@comment.Id">Save Reply</button>
                            <button class="showRepliesBtn">Show Replies</button>
                        </div>

                        <div class="childComments">
                            @foreach (var reply in comment.ChildComments)
                            {
                                <div class="comment" data-comment-id="@reply.Id">
                                    <p>@reply.Text</p>

                                    <input type="text" class="replyInput" id="replyCommentInput" placeholder="Write a reply..." />
                                    <button class="saveReplyBtn" data-parent-id="@reply.ParentComment.Id">Save Reply</button>
                                    <button class="showRepliesBtn">Show Replies</button>

                                    <!-- Nested replies can be handled similarly -->
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>*@
    </div>
    <script>
        $(document).ready(function () {
            // Handle saving a new comment
            $('#saveCommentBtn').click(function () {
                console.log('Save Comment button clicked');
                var gameId = $(this).data('game-id');
                var text = $('#commentInput').val();
                var commentContainer = $('#comments');

                $.post('/Comment/CreateComment', { GameId: gameId, Text: text }, function (response) {
                    // Handle the response, and if successful, append the new comment to the container
                    if (response.success) {
                        var newCommentHtml = '<div class="comment" data-comment-id="' + response.commentId + '"><p>' + text + '</p>...'; // Add the rest of your comment HTML
                        commentContainer.append(newCommentHtml);
                        $('#commentInput').val(''); // Clear the input field
                    } else {
                        alert('Failed to save the comment. Please try again.');
                    }
                });
            });

            // Handle showing/hiding replies
            $('.showRepliesBtn').click(function () {
                var commentId = $(this).closest('.comment').data('comment-id');
                var childComments = $(this).siblings('.childComments');

                // Toggle visibility of childComments and update button text
                childComments.toggle();
                if (childComments.is(':visible')) {
                    $(this).text('Hide Replies');
                } else {
                    $(this).text('Show Replies');
                }
            });

            // Handle saving a new reply
            $('.saveReplyBtn').click(function () {
                var text = $('#replyCommentInput').val();
                var parentId = $(this).data('parent-id');
                var commentContainer = $(this).closest('.comment').find('.childComments');

                $.post('/Comment/CreateComment', { Text: text, ParentCommentId: parentId }, function (response) {
                    if (response.success) {
                        var newCommentHtml = '<div class="comment" data-comment-id="' + response.commentId + '"><p>' + text + '</p>...'; // Add the rest of your comment HTML
                        commentContainer.append(newCommentHtml);
                        $(this).siblings('.replyInput').find('.replyText').val(''); // Clear the input field
                    } else {
                        alert('Failed to save the reply. Please try again.');
                    }
                });
            });

        });

    </script>

<script>
    $(document).ready(function () {
        // Handle the "BUY" button click event
        $('.buy-game').on('click', function (e) {
            e.preventDefault(); // Prevent the default link behavior

            var gameId = $(this).data('game-id'); // Get the game ID from the data attribute
            var userId = $(this).data('user-id'); // Get the user ID from the data attribute

            // Send a POST request to the CreateCartItem action
            $.ajax({
                type: 'POST',
                url: '/CartItem/CreateCartItem',
                data: { GameId: gameId, UserId: userId, Count: 1 }, // Ensure that the key names match your action parameters
                success: function (data) {
                    // Handle the response if needed
                    console.log('CartItem created: ' + data);
                    // Optionally, you can redirect the user after the cart item is created
                    // window.location.href = '/your-success-page';
                },
                error: function (error) {
                    // Handle any errors
                    console.error('Error creating CartItem: ' + error);
                }
            });
            getCartItemCount();
        });
    });
</script>
