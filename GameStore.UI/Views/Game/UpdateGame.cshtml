@using GameStore.Application.UseCases.Games;
@using GameStore.Application.UseCases.Genres;
@model GameResponse
@{
    ViewData["Title"] = "Update Game";
    Layout = "_Layout";
    GenreResponse[] Genres = ViewData["Genres"] as GenreResponse[];
}


<form asp-action="UpdateGame" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="create-box">


    <h2 style="color:white; display:flex; justify-content:center; padding-bottom:10px; padding-top:10px;"> Update Game</h2>

    <div class="form-group">
        <div class="row">
            <div class="col-6">
                <label asp-for="Name" class="control-label text-white">Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="col-6" style="width:330px;">
                <label asp-for="Price" class="control-label text-white">Price</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="form-group pt-3" style="width:75%;">
        <label asp-for="Description" class="control-label text-white">Description</label>
        <textarea asp-for="Description" class="form-control" rows="2" style="min-height: 50px;" maxlength="5000"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

        <div class="form-group box pt-3">
            <label asp-for="Genres" class="control-label text-white">Genres</label>
            <div class="row">
                @foreach (var genre in Genres)
                {
                    <div class="col-md-4">
                        <div class="form-check">
                            <input type="checkbox" name="GenreIds" value="@genre.Id" class="form-check-input"
                            @(Model.Genres.Any(g => g.Id == genre.Id) ? "checked" : "") />
                            <label class="form-check-label text-white">@genre.Name</label>
                        </div>
                    </div>
                }
            </div>
        </div>
        <asp-validation-for="Genres" class="text-danger"></span>

      @*      @if (!string.IsNullOrEmpty(Model.Picture))
            {
                <div class="form-group pb-3">
                    <img src="~/@Model.Picture" alt="@Model.Name" style="padding-top:25px; width: 250px; height:180px;position:center;" />
                </div>
            }*@

            <div class="form-group pt-3" style="width:250px;">
                <label asp-for="Picture" class="control-label text-white">Game Picture</label>
                <input type="hidden" name="CurrentPicture" value="@Model.Picture" />
                <input type="file" name="NewPicture" accept=".jpg, .jpeg, .png" class="form-control-file text-white pb-2" />
                <span asp-validation-for="Picture" class="text-danger"></span>
                @if (!string.IsNullOrEmpty(Model.Picture))
                {
                    <img src="~/@Model.Picture" alt="@Model.Name" style="width: 200px; height: 180px;" />
                }
            </div>


            <button type="submit" class="btn btn-primary">Update Game</button>

    </div>
</form>
